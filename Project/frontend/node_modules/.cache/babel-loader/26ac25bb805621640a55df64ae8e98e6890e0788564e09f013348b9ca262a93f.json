{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-21bd57cb\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"word-cloud-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"word-cloud-1\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"fs-1 fw-bold\"\n}, \"장점\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"word-cloud-2\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"fs-1 fw-bold\"\n}, \"단점\")], -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_4]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_4"],"sources":["C:\\Users\\user\\Desktop\\swe-pknu\\swe-2023\\Project\\frontend\\src\\components\\WordCloud.vue"],"sourcesContent":["<template>\r\n    <div class=\"word-cloud-container\">\r\n        <div id=\"word-cloud-1\">\r\n            <div class=\"fs-1 fw-bold\">장점</div>\r\n        </div>\r\n        <div id=\"word-cloud-2\">\r\n            <div class=\"fs-1 fw-bold\">단점</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport * as d3 from 'd3';\r\nimport cloud from 'd3-cloud';\r\n\r\nexport default {\r\n    props: {\r\n        items: {\r\n            type: Object,\r\n            require: true,\r\n        }\r\n    },\r\n    watch: {\r\n        items: {\r\n            handler() {\r\n                this.createWordClouds();\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    methods: {\r\n        createWordClouds() {\r\n            this.createWordCloud('#word-cloud-1', this.items.map(item => ({ text: item.PositiveKeyword, size: item.PositiveRating * 2 })));\r\n            this.createWordCloud('#word-cloud-2', this.items.map(item => ({ text: item.NegativeKeyword, size: item.NegativeRating * 2 })));\r\n        },\r\n        createWordCloud(containerId, words) {\r\n            const width = window.innerWidth;\r\n            const height = 400;\r\n            const layout = cloud()\r\n                .size([width, height])\r\n                .words(words)\r\n                .padding(10)\r\n                .rotate(() => 0)\r\n                .font(\"Impact\")\r\n                .fontSize(d => d.size * 10)\r\n                .on(\"end\", words => this.draw(containerId, words));\r\n            layout.start();\r\n        },\r\n        draw(containerId, words) {\r\n            d3.select(containerId).select(\"svg\").remove();\r\n            const width = window.innerWidth;\r\n            const height = 400;\r\n            const svg = d3.select(containerId).append(\"svg\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .append(\"g\")\r\n                .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\r\n            svg.selectAll(\"text\")\r\n                .data(words)\r\n                .enter().append(\"text\")\r\n                .style(\"font-size\", d => d.size + \"px\")\r\n                .style(\"font-family\", \"Impact\")\r\n                .style(\"fill\", containerId === '#word-cloud-1' ? 'DodgerBlue' : 'Red')\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\"transform\", d => `translate(${[d.x, d.y]})`)\r\n                .text(function (d) { return d.text; })\r\n                .style(\"border\", \"1px solid black\")\r\n                .on(\"click\", (event, d) => {\r\n                    if (containerId === '#word-cloud-1') {\r\n                        this.$router.push({\r\n                            name: 'similarItems',\r\n                            query: { KeyWord: d.text }\r\n                        });\r\n                    } else {\r\n                        this.$router.push({\r\n                            name: 'negativeReviews',\r\n                            query: { KeyWord: d.text, itemId: this.$store.state.itemId }\r\n                        });\r\n                    }\r\n                })\r\n        },\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.word-cloud-1,\r\n.word-cloud-2 {\r\n    width: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAsB;gEAC7BC,mBAAA,CAEM;EAFDC,EAAE,EAAC;AAAc,I,aAClBD,mBAAA,CAAkC;EAA7BD,KAAK,EAAC;AAAc,GAAC,IAAE,E;gEAEhCC,mBAAA,CAEM;EAFDC,EAAE,EAAC;AAAc,I,aAClBD,mBAAA,CAAkC;EAA7BD,KAAK,EAAC;AAAc,GAAC,IAAE,E;oBAJhCG,UAEM,EACNC,UAEM,C;;uBANVC,mBAAA,CAOM,OAPNC,UAOM,MAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}