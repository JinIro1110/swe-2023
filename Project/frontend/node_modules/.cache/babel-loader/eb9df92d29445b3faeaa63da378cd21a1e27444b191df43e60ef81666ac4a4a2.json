{"ast":null,"code":"import * as d3 from 'd3';\nimport cloud from 'd3-cloud';\nexport default {\n  name: 'WordCloud',\n  data() {\n    return {\n      items: {\n        pros: [['pros1', 0.6], ['pros2', 0.5], ['pros3', 0.4]],\n        cons: [['cons1', 0.6], ['cons2', 0.5], ['cons3', 0.4]]\n      }\n    };\n  },\n  mounted() {\n    this.createWordCloud('#word-cloud-1', this.items.pros.map(item => ({\n      text: item[0],\n      size: item[1] * 70\n    })));\n    this.createWordCloud('#word-cloud-2', this.items.cons.map(item => ({\n      text: item[0],\n      size: item[1] * 70\n    })));\n  },\n  methods: {\n    createWordCloud(containerId, words) {\n      const layout = cloud().size([200, 200]) // 클라우드 크기를 줄임\n      .words(words).padding(10) // 겹침 방지를 위해 패딩 증가\n      .rotate(() => 0) // 모든 단어를 가로 방향으로\n      .font(\"Impact\").fontSize(d => d.size).on(\"end\", words => this.draw(containerId, words));\n      layout.start();\n    },\n    draw(containerId, words) {\n      const svg = d3.select(containerId).append(\"svg\").attr(\"width\", 200).attr(\"height\", 200).append(\"g\").attr(\"transform\", \"translate(100,100)\");\n      svg.selectAll(\"text\").data(words).enter().append(\"text\").style(\"font-size\", d => d.size + \"px\").style(\"font-family\", \"Impact\").style(\"fill\", containerId === '#word-cloud-1' ? 'DodgerBlue' : 'Red').attr(\"text-anchor\", \"middle\").attr(\"transform\", d => `translate(${[d.x, d.y]})`).text(d => d.text).style(\"border\", \"1px solid black\");\n    }\n  }\n};","map":{"version":3,"names":["d3","cloud","name","data","items","pros","cons","mounted","createWordCloud","map","item","text","size","methods","containerId","words","layout","padding","rotate","font","fontSize","d","on","draw","start","svg","select","append","attr","selectAll","enter","style","x","y"],"sources":["/Users/jinsanghyeok/Desktop/swe-2023/Project/frontend/src/components/WordCloud.vue"],"sourcesContent":["<template>\n    <div class=\"word-cloud-container\">\n        <div id=\"word-cloud-1\">\n            <div class=\"fs-1 fw-bold\">장점</div>\n        </div>\n        <div id=\"word-cloud-2\">\n            <div class=\"fs-1 fw-bold\">단점</div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport cloud from 'd3-cloud';\n\nexport default {\n    name: 'WordCloud',\n    data() {\n        return {\n            items: {\n                pros: [\n                    ['pros1', 0.6],\n                    ['pros2', 0.5],\n                    ['pros3', 0.4],\n                ],\n                cons: [\n                    ['cons1', 0.6],\n                    ['cons2', 0.5],\n                    ['cons3', 0.4],\n                ]\n            }\n        };\n    },\n    mounted() {\n        this.createWordCloud('#word-cloud-1', this.items.pros.map(item => ({ text: item[0], size: item[1] * 70 })));\n        this.createWordCloud('#word-cloud-2', this.items.cons.map(item => ({ text: item[0], size: item[1] * 70 })));\n    },\n    methods: {\n        createWordCloud(containerId, words) {\n            const layout = cloud()\n                .size([200, 200]) // 클라우드 크기를 줄임\n                .words(words)\n                .padding(10) // 겹침 방지를 위해 패딩 증가\n                .rotate(() => 0) // 모든 단어를 가로 방향으로\n                .font(\"Impact\")\n                .fontSize(d => d.size)\n                .on(\"end\", words => this.draw(containerId, words));\n\n            layout.start();\n        },\n        draw(containerId, words) {\n            const svg = d3.select(containerId).append(\"svg\")\n                .attr(\"width\", 200)\n                .attr(\"height\", 200)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(100,100)\");\n\n            svg.selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .style(\"font-size\", d => d.size + \"px\")\n                .style(\"font-family\", \"Impact\")\n                .style(\"fill\", containerId === '#word-cloud-1' ? 'DodgerBlue' : 'Red')\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"transform\", d => `translate(${[d.x, d.y]})`)\n                .text(d => d.text)\n                .style(\"border\", \"1px solid black\");\n        }\n    }\n};\n</script>\n\n<style scoped>\n.word-cloud-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n</style>\n"],"mappings":"AAYA,OAAO,KAAKA,EAAC,MAAO,IAAI;AACxB,OAAOC,KAAI,MAAO,UAAU;AAE5B,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE;QACHC,IAAI,EAAE,CACF,CAAC,OAAO,EAAE,GAAG,CAAC,EACd,CAAC,OAAO,EAAE,GAAG,CAAC,EACd,CAAC,OAAO,EAAE,GAAG,CAAC,CACjB;QACDC,IAAI,EAAE,CACF,CAAC,OAAO,EAAE,GAAG,CAAC,EACd,CAAC,OAAO,EAAE,GAAG,CAAC,EACd,CAAC,OAAO,EAAE,GAAG,CAAC;MAEtB;IACJ,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,eAAe,CAAC,eAAe,EAAE,IAAI,CAACJ,KAAK,CAACC,IAAI,CAACI,GAAG,CAACC,IAAG,KAAM;MAAEC,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;MAAEE,IAAI,EAAEF,IAAI,CAAC,CAAC,IAAI;IAAG,CAAC,CAAC,CAAC,CAAC;IAC3G,IAAI,CAACF,eAAe,CAAC,eAAe,EAAE,IAAI,CAACJ,KAAK,CAACE,IAAI,CAACG,GAAG,CAACC,IAAG,KAAM;MAAEC,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;MAAEE,IAAI,EAAEF,IAAI,CAAC,CAAC,IAAI;IAAG,CAAC,CAAC,CAAC,CAAC;EAC/G,CAAC;EACDG,OAAO,EAAE;IACLL,eAAeA,CAACM,WAAW,EAAEC,KAAK,EAAE;MAChC,MAAMC,MAAK,GAAIf,KAAK,CAAC,EAChBW,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;MAAA,CACjBG,KAAK,CAACA,KAAK,EACXE,OAAO,CAAC,EAAE,EAAE;MAAA,CACZC,MAAM,CAAC,MAAM,CAAC,EAAE;MAAA,CAChBC,IAAI,CAAC,QAAQ,EACbC,QAAQ,CAACC,CAAA,IAAKA,CAAC,CAACT,IAAI,EACpBU,EAAE,CAAC,KAAK,EAAEP,KAAI,IAAK,IAAI,CAACQ,IAAI,CAACT,WAAW,EAAEC,KAAK,CAAC,CAAC;MAEtDC,MAAM,CAACQ,KAAK,CAAC,CAAC;IAClB,CAAC;IACDD,IAAIA,CAACT,WAAW,EAAEC,KAAK,EAAE;MACrB,MAAMU,GAAE,GAAIzB,EAAE,CAAC0B,MAAM,CAACZ,WAAW,CAAC,CAACa,MAAM,CAAC,KAAK,EAC1CC,IAAI,CAAC,OAAO,EAAE,GAAG,EACjBA,IAAI,CAAC,QAAQ,EAAE,GAAG,EAClBD,MAAM,CAAC,GAAG,EACVC,IAAI,CAAC,WAAW,EAAE,oBAAoB,CAAC;MAE5CH,GAAG,CAACI,SAAS,CAAC,MAAM,EACf1B,IAAI,CAACY,KAAK,EACVe,KAAK,CAAC,CAAC,CAACH,MAAM,CAAC,MAAM,EACrBI,KAAK,CAAC,WAAW,EAAEV,CAAA,IAAKA,CAAC,CAACT,IAAG,GAAI,IAAI,EACrCmB,KAAK,CAAC,aAAa,EAAE,QAAQ,EAC7BA,KAAK,CAAC,MAAM,EAAEjB,WAAU,KAAM,eAAc,GAAI,YAAW,GAAI,KAAK,EACpEc,IAAI,CAAC,aAAa,EAAE,QAAQ,EAC5BA,IAAI,CAAC,WAAW,EAAEP,CAAA,IAAM,aAAY,CAACA,CAAC,CAACW,CAAC,EAAEX,CAAC,CAACY,CAAC,CAAE,GAAE,EACjDtB,IAAI,CAACU,CAAA,IAAKA,CAAC,CAACV,IAAI,EAChBoB,KAAK,CAAC,QAAQ,EAAE,iBAAiB,CAAC;IAC3C;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}