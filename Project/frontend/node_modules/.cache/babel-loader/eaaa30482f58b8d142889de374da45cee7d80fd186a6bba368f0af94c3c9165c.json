{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as d3 from 'd3';\nimport cloud from 'd3-cloud';\nexport default {\n  props: {\n    items: {\n      type: Object,\n      require: true\n    }\n  },\n  watch: {\n    items: {\n      handler() {\n        this.createWordClouds();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    createWordClouds() {\n      this.createWordCloud('#word-cloud-1', this.items.map(item => ({\n        text: item.PositiveKeyword,\n        size: item.PositiveRating * 2\n      })));\n      this.createWordCloud('#word-cloud-2', this.items.map(item => ({\n        text: item.NegativeKeyword,\n        size: item.NegativeRating * 2\n      })));\n    },\n    createWordCloud(containerId, words) {\n      const width = window.innerWidth;\n      const height = 400;\n      const layout = cloud().size([width, height]).words(words).padding(10).rotate(() => 0).font(\"Impact\").fontSize(d => d.size * 10).on(\"end\", words => this.draw(containerId, words));\n      layout.start();\n    },\n    draw(containerId, words) {\n      d3.select(containerId).select(\"svg\").remove();\n      const width = window.innerWidth;\n      const height = 400;\n      const svg = d3.select(containerId).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n      svg.selectAll(\"text\").data(words).enter().append(\"text\").style(\"font-size\", d => d.size + \"px\").style(\"font-family\", \"Impact\").style(\"fill\", containerId === '#word-cloud-1' ? 'DodgerBlue' : 'Red').attr(\"text-anchor\", \"middle\").attr(\"transform\", d => `translate(${[d.x, d.y]})`).text(function (d) {\n        return d.text;\n      }).style(\"border\", \"1px solid black\").on(\"click\", (event, d) => {\n        if (containerId === '#word-cloud-1') {\n          this.$router.push({\n            name: 'similarItems',\n            query: {\n              KeyWord: d.text\n            }\n          });\n        } else {\n          this.$router.push({\n            name: 'NegativeReviews',\n            query: {\n              KeyWord: d.text,\n              itemId: this.$store.state.itemId\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["d3","cloud","props","items","type","Object","require","watch","handler","createWordClouds","deep","methods","createWordCloud","map","item","text","PositiveKeyword","size","PositiveRating","NegativeKeyword","NegativeRating","containerId","words","width","window","innerWidth","height","layout","padding","rotate","font","fontSize","d","on","draw","start","select","remove","svg","append","attr","selectAll","data","enter","style","x","y","event","$router","push","name","query","KeyWord","itemId","$store","state"],"sources":["/Users/jinsanghyeok/Desktop/swe-2023/Project/frontend/src/components/WordCloud.vue"],"sourcesContent":["<template>\n    <div class=\"word-cloud-container\">\n        <div id=\"word-cloud-1\">\n            <div class=\"fs-1 fw-bold\">장점</div>\n        </div>\n        <div id=\"word-cloud-2\">\n            <div class=\"fs-1 fw-bold\">단점</div>\n        </div>\n    </div>\n    <!-- <div class=\"modal-container\" v-show=\"isModal\" @click.self=\"close\">\n        <div class=\"headMenu container-fluid text-center p-3\">\n            <div class=\"row justify-content-evenly\">\n                <div class=\"col d-flex justify-content-start\" @click=\"closeModal\" @click.stop=\"\">\n                    <img src=\"../assets/icons/backward.png\" class=\"iconWidth\">\n                </div>\n                <div class=\"col d-flex justify-content-center\" style=\"font-size: 17px; font-weight: lighter;\">\n                    {{ keyWord }} 포함 리뷰\n                </div>\n                <div class=\"col\">\n                </div>\n            </div>\n        </div>\n        <div class=\"review p-3\" v-for=\"consReview in consReviews\" :key=\"consReview.ReviewID\">\n            <div class=\"\">\n                <div class=\"userInfo d-flex align-items-start text-start\">\n                    <img class=\"profile\" :src=\"require('@/assets/icons/user.png')\">\n                    <div class=\"babyInfo mb-2\">\n                        <div class=\"userName\">유저 {{ consReview.UserID }}</div>\n                        <div class=\"baby\">만 2세 <span>&#183;</span> 민감성 <span>&#183;</span> 여아</div>\n                        <svg v-for=\"i in 5\" :key=\"i\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\">\n                            <path :fill=\"i <= consReview.Rating ? 'gold' : '#ccc'\"\n                                d=\"M23.836,8.794a3.179,3.179,0,0,0-3.067-2.226H16.4L15.073,2.432a3.227,3.227,0,0,0-6.146,0L7.6,6.568H3.231a3.227,3.227,0,0,0-1.9,5.832L4.887,15,3.535,19.187A3.178,3.178,0,0,0,4.719,22.8a3.177,3.177,0,0,0,3.8-.019L12,20.219l3.482,2.559a3.227,3.227,0,0,0,4.983-3.591L19.113,15l3.56-2.6A3.177,3.177,0,0,0,23.836,8.794Z\" />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n            <div class=\"reviewContainer\">\n                <img class=\"reviewIcon\" :src=\"require('@/assets/icons/bad.png')\">\n                <div class=\"reviewText\">{{ consReview.NegativeReviewText }}</div>\n            </div>\n        </div>\n    </div> -->\n\n</template>\n\n<script>\n\nimport * as d3 from 'd3';\nimport cloud from 'd3-cloud';\n\nexport default {\n    props: {\n        items: {\n            type: Object,\n            require: true,\n        }\n    },\n    watch: {\n        items: {\n            handler() {\n                this.createWordClouds();\n            },\n            deep: true\n        }\n    },\n    methods: {\n        createWordClouds() {\n            this.createWordCloud('#word-cloud-1', this.items.map(item => ({ text: item.PositiveKeyword, size: item.PositiveRating * 2 })));\n            this.createWordCloud('#word-cloud-2', this.items.map(item => ({ text: item.NegativeKeyword, size: item.NegativeRating * 2 })));\n        },\n        createWordCloud(containerId, words) {\n            const width = window.innerWidth;\n            const height = 400;\n            const layout = cloud()\n                .size([width, height])\n                .words(words)\n                .padding(10)\n                .rotate(() => 0)\n                .font(\"Impact\")\n                .fontSize(d => d.size * 10)\n                .on(\"end\", words => this.draw(containerId, words));\n            layout.start();\n        },\n        draw(containerId, words) {\n            d3.select(containerId).select(\"svg\").remove();\n            const width = window.innerWidth;\n            const height = 400;\n            const svg = d3.select(containerId).append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .append(\"g\")\n                .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n            svg.selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .style(\"font-size\", d => d.size + \"px\")\n                .style(\"font-family\", \"Impact\")\n                .style(\"fill\", containerId === '#word-cloud-1' ? 'DodgerBlue' : 'Red')\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"transform\", d => `translate(${[d.x, d.y]})`)\n                .text(function (d) { return d.text; })\n                .style(\"border\", \"1px solid black\")\n                .on(\"click\", (event, d) => {\n                    if (containerId === '#word-cloud-1') {\n                        this.$router.push({\n                            name: 'similarItems',\n                            query: { KeyWord: d.text }\n                        });\n                    } else {\n                        this.$router.push({\n                            name: 'NegativeReviews',\n                            query: { KeyWord: d.text, itemId: this.$store.state.itemId }\n                        });\n                    }\n                })\n        },\n    }\n};\n</script>\n\n<style scoped>\n.word-cloud-1,\n.word-cloud-2 {\n    width: 100%;\n}\n\n.rounded-circle {\n    width: 50px;\n    position: fixed;\n    bottom: 60px;\n    right: 30px;\n}\n\n.profile {\n    width: 40px;\n    border-radius: 100%;\n    padding: 5px;\n    background-color: #ccc;\n    margin-right: 10px;\n}\n\n.review {\n    border-bottom: 1px #ccc solid;\n}\n\n.reviewContainer {\n    display: flex;\n    align-items: flex-start;\n}\n\n.reviewIcon {\n    width: 22px;\n    margin-right: 10px;\n}\n\n.reviewText {\n    flex: 1;\n    text-align: start;\n}\n\n.userName {\n    font-weight: bold;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}