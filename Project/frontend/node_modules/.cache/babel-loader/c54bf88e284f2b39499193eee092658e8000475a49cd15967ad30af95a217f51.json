{"ast":null,"code":"export default {\n  data() {\n    return {\n      curPos: 0,\n      position: 0,\n      IMAGE_WIDTH: 375,\n      images: null,\n      totalImages: 5,\n      // 마지막 슬라이드를 추가하여 총 이미지 수 변경\n      intervalId: null,\n      autoSlideDuration: 3000\n    };\n  },\n  mounted() {\n    this.images = this.$refs.images;\n    this.images.addEventListener('touchstart', this.touch_start);\n    this.images.addEventListener('touchend', this.touch_end);\n    this.startAutoSlide();\n  },\n  methods: {\n    prev() {\n      if (this.curPos > 0) {\n        this.position += this.IMAGE_WIDTH;\n        this.images.style.transform = `translateX(${this.position}px)`;\n        this.curPos -= 1;\n      } else {\n        // 첫 번째 슬라이드에서 이전으로 넘어갈 때는 마지막 슬라이드로 이동\n        this.position = -this.IMAGE_WIDTH * (this.totalImages - 1);\n        this.images.style.transform = `translateX(${this.position}px)`;\n        this.curPos = this.totalImages - 1;\n      }\n    },\n    next() {\n      if (this.curPos < this.totalImages - 1) {\n        this.position -= this.IMAGE_WIDTH;\n        this.images.style.transform = `translateX(${this.position}px)`;\n        this.curPos += 1;\n      } else {\n        // 마지막 슬라이드에서 다음으로 넘어갈 때는 첫 번째 슬라이드로 이동\n        this.position = 0;\n        this.images.style.transform = `translateX(${this.position}px)`;\n        this.curPos = 0;\n      }\n    },\n    touch_start(event) {\n      this.pauseAutoSlide();\n      this.start_x = event.touches[0].pageX;\n    },\n    touch_end(event) {\n      this.end_x = event.changedTouches[0].pageX;\n      if (this.start_x > this.end_x) {\n        this.next();\n      } else {\n        this.prev();\n      }\n      this.startAutoSlide();\n    },\n    startAutoSlide() {\n      this.intervalId = setInterval(() => {\n        this.next();\n      }, this.autoSlideDuration);\n    },\n    pauseAutoSlide() {\n      clearInterval(this.intervalId);\n    }\n  }\n};","map":{"version":3,"names":["data","curPos","position","IMAGE_WIDTH","images","totalImages","intervalId","autoSlideDuration","mounted","$refs","addEventListener","touch_start","touch_end","startAutoSlide","methods","prev","style","transform","next","event","pauseAutoSlide","start_x","touches","pageX","end_x","changedTouches","setInterval","clearInterval"],"sources":["/Users/jinsanghyeok/Desktop/front/src/components/BeluvMall.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n      <div class=\"row justify-content-between align-items-center m-1\">\n        <div class=\"Logo col d-flex justify-content-start\">Beluv MALL</div>\n        <div class=\"col d-flex justify-content-end\">\n          <img src=\"../assets/icons/cart.png\" alt=\"\" class=\"iconWidth\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"album\">\n          <div class=\"images\" ref=\"images\">\n            <img src=\"../assets/photos/babyBook.jpg\" alt=\"\">\n            <img src=\"../assets/photos/babyFoot.jpg\" alt=\"\">\n            <img src=\"../assets/photos/babyPink.jpg\" alt=\"\">\n            <img src=\"../assets/photos/koreanBaby.jpg\" alt=\"\">\n            <!-- 마지막 슬라이드를 첫 번째 슬라이드 앞에 복제 -->\n            <img src=\"../assets/photos/babyBook.jpg\" alt=\"\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        curPos: 0,\n        position: 0,\n        IMAGE_WIDTH: 375,\n        images: null,\n        totalImages: 5, // 마지막 슬라이드를 추가하여 총 이미지 수 변경\n        intervalId: null,\n        autoSlideDuration: 3000\n      };\n    },\n    mounted() {\n      this.images = this.$refs.images;\n      this.images.addEventListener('touchstart', this.touch_start);\n      this.images.addEventListener('touchend', this.touch_end);\n      this.startAutoSlide();\n    },\n    methods: {\n      prev() {\n        if (this.curPos > 0) {\n          this.position += this.IMAGE_WIDTH;\n          this.images.style.transform = `translateX(${this.position}px)`;\n          this.curPos -= 1;\n        } else {\n          // 첫 번째 슬라이드에서 이전으로 넘어갈 때는 마지막 슬라이드로 이동\n          this.position = -this.IMAGE_WIDTH * (this.totalImages - 1);\n          this.images.style.transform = `translateX(${this.position}px)`;\n          this.curPos = this.totalImages - 1;\n        }\n      },\n      next() {\n        if (this.curPos < this.totalImages - 1) {\n          this.position -= this.IMAGE_WIDTH;\n          this.images.style.transform = `translateX(${this.position}px)`;\n          this.curPos += 1;\n        } else {\n          // 마지막 슬라이드에서 다음으로 넘어갈 때는 첫 번째 슬라이드로 이동\n          this.position = 0;\n          this.images.style.transform = `translateX(${this.position}px)`;\n          this.curPos = 0;\n        }\n      },\n      touch_start(event) {\n        this.pauseAutoSlide();\n        this.start_x = event.touches[0].pageX;\n      },\n      touch_end(event) {\n        this.end_x = event.changedTouches[0].pageX;\n        if (this.start_x > this.end_x) {\n          this.next();\n        } else {\n          this.prev();\n        }\n        this.startAutoSlide();\n      },\n      startAutoSlide() {\n        this.intervalId = setInterval(() => {\n          this.next();\n        }, this.autoSlideDuration);\n      },\n      pauseAutoSlide() {\n        clearInterval(this.intervalId);\n      }\n    }\n  };\n  </script>\n  \n  <style>\n  @font-face {\n    font-family: 'Beluv';\n    src: url('../assets/fonts/나눔손글씨\\ 아인맘\\ 손글씨.ttf')\n  }\n  \n  .iconWidth {\n    width: 25px;\n  }\n  \n  .Logo {\n    font-family: 'Beluv';\n    font-size: 30px;\n    font-weight: bold;\n    color: rgb(100, 206, 145)\n  }\n  \n  .album {\n    width: 100%;\n    overflow: hidden;\n  }\n  \n  .images {\n    width: calc(100% * 5); /* 모든 슬라이드의 너비 합계만큼 설정 */\n    position: relative;\n    display: flex;\n    height: 300px;\n    transition: transform 0.5s;\n  }\n  \n  img {\n    width: 375px;\n  }\n  </style>\n  "],"mappings":"AAwBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,GAAG;MAChBC,MAAM,EAAE,IAAI;MACZC,WAAW,EAAE,CAAC;MAAE;MAChBC,UAAU,EAAE,IAAI;MAChBC,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,MAAK,GAAI,IAAI,CAACK,KAAK,CAACL,MAAM;IAC/B,IAAI,CAACA,MAAM,CAACM,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACC,WAAW,CAAC;IAC5D,IAAI,CAACP,MAAM,CAACM,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACE,SAAS,CAAC;IACxD,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACPC,IAAIA,CAAA,EAAG;MACL,IAAI,IAAI,CAACd,MAAK,GAAI,CAAC,EAAE;QACnB,IAAI,CAACC,QAAO,IAAK,IAAI,CAACC,WAAW;QACjC,IAAI,CAACC,MAAM,CAACY,KAAK,CAACC,SAAQ,GAAK,cAAa,IAAI,CAACf,QAAS,KAAI;QAC9D,IAAI,CAACD,MAAK,IAAK,CAAC;MAClB,OAAO;QACL;QACA,IAAI,CAACC,QAAO,GAAI,CAAC,IAAI,CAACC,WAAU,IAAK,IAAI,CAACE,WAAU,GAAI,CAAC,CAAC;QAC1D,IAAI,CAACD,MAAM,CAACY,KAAK,CAACC,SAAQ,GAAK,cAAa,IAAI,CAACf,QAAS,KAAI;QAC9D,IAAI,CAACD,MAAK,GAAI,IAAI,CAACI,WAAU,GAAI,CAAC;MACpC;IACF,CAAC;IACDa,IAAIA,CAAA,EAAG;MACL,IAAI,IAAI,CAACjB,MAAK,GAAI,IAAI,CAACI,WAAU,GAAI,CAAC,EAAE;QACtC,IAAI,CAACH,QAAO,IAAK,IAAI,CAACC,WAAW;QACjC,IAAI,CAACC,MAAM,CAACY,KAAK,CAACC,SAAQ,GAAK,cAAa,IAAI,CAACf,QAAS,KAAI;QAC9D,IAAI,CAACD,MAAK,IAAK,CAAC;MAClB,OAAO;QACL;QACA,IAAI,CAACC,QAAO,GAAI,CAAC;QACjB,IAAI,CAACE,MAAM,CAACY,KAAK,CAACC,SAAQ,GAAK,cAAa,IAAI,CAACf,QAAS,KAAI;QAC9D,IAAI,CAACD,MAAK,GAAI,CAAC;MACjB;IACF,CAAC;IACDU,WAAWA,CAACQ,KAAK,EAAE;MACjB,IAAI,CAACC,cAAc,CAAC,CAAC;MACrB,IAAI,CAACC,OAAM,GAAIF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK;IACvC,CAAC;IACDX,SAASA,CAACO,KAAK,EAAE;MACf,IAAI,CAACK,KAAI,GAAIL,KAAK,CAACM,cAAc,CAAC,CAAC,CAAC,CAACF,KAAK;MAC1C,IAAI,IAAI,CAACF,OAAM,GAAI,IAAI,CAACG,KAAK,EAAE;QAC7B,IAAI,CAACN,IAAI,CAAC,CAAC;MACb,OAAO;QACL,IAAI,CAACH,IAAI,CAAC,CAAC;MACb;MACA,IAAI,CAACF,cAAc,CAAC,CAAC;IACvB,CAAC;IACDA,cAAcA,CAAA,EAAG;MACf,IAAI,CAACP,UAAS,GAAIoB,WAAW,CAAC,MAAM;QAClC,IAAI,CAACR,IAAI,CAAC,CAAC;MACb,CAAC,EAAE,IAAI,CAACX,iBAAiB,CAAC;IAC5B,CAAC;IACDa,cAAcA,CAAA,EAAG;MACfO,aAAa,CAAC,IAAI,CAACrB,UAAU,CAAC;IAChC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}