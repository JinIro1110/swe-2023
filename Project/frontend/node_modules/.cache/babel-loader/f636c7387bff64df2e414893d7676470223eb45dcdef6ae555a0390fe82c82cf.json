{"ast":null,"code":"import * as d3 from 'd3';\nimport cloud from 'd3-cloud';\nexport default {\n  name: 'WordCloud',\n  mounted() {\n    this.createWordCloud('#word-cloud-1', [{\n      text: 'Hello',\n      size: 20\n    }, {\n      text: 'Vue',\n      size: 20\n    }, {\n      text: 'Hello',\n      size: 20\n    }, {\n      text: 'Vue',\n      size: 20\n    }, {\n      text: 'Hello',\n      size: 20\n    }, {\n      text: 'Vue',\n      size: 20\n    }, {\n      text: 'Hello',\n      size: 40\n    }, {\n      text: 'Vue',\n      size: 50\n    }]);\n    this.createWordCloud('#word-cloud-2', [{\n      text: 'World',\n      size: 30\n    }, {\n      text: 'JavaScript',\n      size: 60\n    }\n    // 추가 단어들...\n    ]);\n  },\n\n  methods: {\n    createWordCloud(containerId, words) {\n      const layout = cloud().size([200, 200]) // 클라우드 크기를 줄임\n      .words(words).padding(10) // 겹침 방지를 위해 패딩 증가\n      .rotate(() => 0) // 모든 단어를 가로 방향으로\n      .font(\"Impact\").fontSize(d => d.size).on(\"end\", words => this.draw(containerId, words));\n      layout.start();\n    },\n    draw(containerId, words) {\n      const svg = d3.select(containerId).append(\"svg\").attr(\"width\", 200).attr(\"height\", 200).append(\"g\").attr(\"transform\", \"translate(100,100)\");\n      svg.selectAll(\"text\").data(words).enter().append(\"text\").style(\"font-size\", d => d.size + \"px\").style(\"font-family\", \"Impact\").attr(\"text-anchor\", \"middle\").attr(\"transform\", d => `translate(${[d.x, d.y]})`).text(d => d.text);\n    }\n  }\n};","map":{"version":3,"names":["d3","cloud","name","mounted","createWordCloud","text","size","methods","containerId","words","layout","padding","rotate","font","fontSize","d","on","draw","start","svg","select","append","attr","selectAll","data","enter","style","x","y"],"sources":["/Users/jinsanghyeok/Desktop/swe-2023/Project/frontend/src/components/WordCloud.vue"],"sourcesContent":["<template>\n    <div class=\"word-cloud-container\">\n        <div id=\"word-cloud-1\">\n            <div class=\"fs-1 fw-bold\">장점</div>\n        </div>\n        <div id=\"word-cloud-2\">\n            <div class=\"fs-1 fw-bold\">단점</div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport cloud from 'd3-cloud';\n\nexport default {\n    name: 'WordCloud',\n    mounted() {\n        this.createWordCloud('#word-cloud-1', [\n            { text: 'Hello', size: 20 },\n            { text: 'Vue', size: 20 },\n            { text: 'Hello', size: 20 },\n            { text: 'Vue', size: 20 },\n            { text: 'Hello', size: 20 },\n            { text: 'Vue', size: 20 },\n            { text: 'Hello', size: 40 },\n            { text: 'Vue', size: 50 },\n        ]);\n        this.createWordCloud('#word-cloud-2', [\n            { text: 'World', size: 30 },\n            { text: 'JavaScript', size: 60 },\n            // 추가 단어들...\n        ]);\n    },\n    methods: {\n        createWordCloud(containerId, words) {\n            const layout = cloud()\n                .size([200, 200]) // 클라우드 크기를 줄임\n                .words(words)\n                .padding(10) // 겹침 방지를 위해 패딩 증가\n                .rotate(() => 0) // 모든 단어를 가로 방향으로\n                .font(\"Impact\")\n                .fontSize(d => d.size)\n                .on(\"end\", words => this.draw(containerId, words));\n\n            layout.start();\n        },\n        draw(containerId, words) {\n            const svg = d3.select(containerId).append(\"svg\")\n                .attr(\"width\", 200)\n                .attr(\"height\", 200)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(100,100)\");\n\n            svg.selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .style(\"font-size\", d => d.size + \"px\")\n                .style(\"font-family\", \"Impact\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"transform\", d => `translate(${[d.x, d.y]})`)\n                .text(d => d.text);\n        }\n    }\n};\n</script>\n\n<style scoped>\n.word-cloud-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#word-cloud-1 svg, #word-cloud-2 svg {\n    border: 1px solid black; /* 테두리 설정 */\n}\n</style>\n"],"mappings":"AAYA,OAAO,KAAKA,EAAC,MAAO,IAAI;AACxB,OAAOC,KAAI,MAAO,UAAU;AAE5B,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,eAAe,CAAC,eAAe,EAAE,CAClC;MAAEC,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC3B;MAAED,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAG,CAAC,EACzB;MAAED,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC3B;MAAED,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAG,CAAC,EACzB;MAAED,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC3B;MAAED,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAG,CAAC,EACzB;MAAED,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC3B;MAAED,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAG,CAAC,CAC5B,CAAC;IACF,IAAI,CAACF,eAAe,CAAC,eAAe,EAAE,CAClC;MAAEC,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC3B;MAAED,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAG;IAC/B;IAAA,CACH,CAAC;EACN,CAAC;;EACDC,OAAO,EAAE;IACLH,eAAeA,CAACI,WAAW,EAAEC,KAAK,EAAE;MAChC,MAAMC,MAAK,GAAIT,KAAK,CAAC,EAChBK,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;MAAA,CACjBG,KAAK,CAACA,KAAK,EACXE,OAAO,CAAC,EAAE,EAAE;MAAA,CACZC,MAAM,CAAC,MAAM,CAAC,EAAE;MAAA,CAChBC,IAAI,CAAC,QAAQ,EACbC,QAAQ,CAACC,CAAA,IAAKA,CAAC,CAACT,IAAI,EACpBU,EAAE,CAAC,KAAK,EAAEP,KAAI,IAAK,IAAI,CAACQ,IAAI,CAACT,WAAW,EAAEC,KAAK,CAAC,CAAC;MAEtDC,MAAM,CAACQ,KAAK,CAAC,CAAC;IAClB,CAAC;IACDD,IAAIA,CAACT,WAAW,EAAEC,KAAK,EAAE;MACrB,MAAMU,GAAE,GAAInB,EAAE,CAACoB,MAAM,CAACZ,WAAW,CAAC,CAACa,MAAM,CAAC,KAAK,EAC1CC,IAAI,CAAC,OAAO,EAAE,GAAG,EACjBA,IAAI,CAAC,QAAQ,EAAE,GAAG,EAClBD,MAAM,CAAC,GAAG,EACVC,IAAI,CAAC,WAAW,EAAE,oBAAoB,CAAC;MAE5CH,GAAG,CAACI,SAAS,CAAC,MAAM,EACfC,IAAI,CAACf,KAAK,EACVgB,KAAK,CAAC,CAAC,CAACJ,MAAM,CAAC,MAAM,EACrBK,KAAK,CAAC,WAAW,EAAEX,CAAA,IAAKA,CAAC,CAACT,IAAG,GAAI,IAAI,EACrCoB,KAAK,CAAC,aAAa,EAAE,QAAQ,EAC7BJ,IAAI,CAAC,aAAa,EAAE,QAAQ,EAC5BA,IAAI,CAAC,WAAW,EAAEP,CAAA,IAAM,aAAY,CAACA,CAAC,CAACY,CAAC,EAAEZ,CAAC,CAACa,CAAC,CAAE,GAAE,EACjDvB,IAAI,CAACU,CAAA,IAAKA,CAAC,CAACV,IAAI,CAAC;IAC1B;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}