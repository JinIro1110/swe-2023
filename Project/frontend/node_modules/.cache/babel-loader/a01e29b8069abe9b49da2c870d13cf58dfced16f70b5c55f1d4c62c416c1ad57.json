{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-21bd57cb\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"word-cloud-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"word-cloud-1\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"word-cloud-2\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_4]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_4"],"sources":["/Users/jinsanghyeok/Desktop/front/src/components/WordCloud.vue"],"sourcesContent":["<template>\n    <div class=\"word-cloud-container\">\n        <div id=\"word-cloud-1\"></div>\n        <div id=\"word-cloud-2\"></div>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport cloud from 'd3-cloud';\n\nexport default {\n    name: 'WordCloud',\n    mounted() {\n        this.createWordCloud('#word-cloud-1', [\n            { text: 'Hello', size: 40 },\n            { text: 'Vue', size: 50 },\n            // 추가 단어들...\n        ]);\n        this.createWordCloud('#word-cloud-2', [\n            { text: 'World', size: 30 },\n            { text: 'JavaScript', size: 60 },\n            // 추가 단어들...\n        ]);\n    },\n    methods: {\n        createWordCloud(containerId, words) {\n            const layout = cloud()\n                .size([200, 200]) // 클라우드 크기를 줄임\n                .words(words)\n                .padding(10) // 겹침 방지를 위해 패딩 증가\n                .rotate(() => 0) // 모든 단어를 가로 방향으로\n                .font(\"Impact\")\n                .fontSize(d => d.size)\n                .on(\"end\", words => this.draw(containerId, words));\n\n            layout.start();\n        },\n        draw(containerId, words) {\n            const svg = d3.select(containerId).append(\"svg\")\n                .attr(\"width\", 200)\n                .attr(\"height\", 200)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(100,100)\");\n\n            svg.selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .style(\"font-size\", d => d.size + \"px\")\n                .style(\"font-family\", \"Impact\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"transform\", d => `translate(${[d.x, d.y]})`)\n                .text(d => d.text);\n        }\n    }\n};\n</script>\n\n<style scoped>\n.word-cloud-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#word-cloud-1 svg, #word-cloud-2 svg {\n    border: 1px solid black; /* 테두리 설정 */\n}\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAsB;gEAC7BC,mBAAA,CAA6B;EAAxBC,EAAE,EAAC;AAAc;gEACtBD,mBAAA,CAA6B;EAAxBC,EAAE,EAAC;AAAc;oBADtBC,UAA6B,EAC7BC,UAA6B,C;;uBAFjCC,mBAAA,CAGM,OAHNC,UAGM,MAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}