{"ast":null,"code":"import axios from 'axios';\nimport * as d3 from 'd3';\nimport cloud from 'd3-cloud';\nexport default {\n  name: 'WordCloud',\n  props: {\n    items: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      items: {\n        type: Object,\n        required: true\n      }\n    };\n  },\n  mounted() {\n    if (this.items) {\n      this.createWordCloud('#word-cloud-1', this.items.Pros.map(item => ({\n        text: item.PositiveKeyWord,\n        size: item.PositiveRating * 2\n      })));\n      this.createWordCloud('#word-cloud-2', this.items.Cons.map(item => ({\n        text: item.NegativeKeyWord,\n        size: item.NegativeRating * 2\n      })));\n    }\n  },\n  methods: {\n    createWordCloud(containerId, words) {\n      const width = window.innerWidth;\n      const height = 400;\n      const layout = cloud().size([width, height]).words(words).padding(10).rotate(() => 0).font(\"Impact\").fontSize(d => d.size * 10).on(\"end\", words => this.draw(containerId, words));\n      layout.start();\n    },\n    draw(containerId, words) {\n      const width = window.innerWidth;\n      const height = 400;\n      const svg = d3.select(containerId).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n      svg.selectAll(\"text\").data(words).enter().append(\"text\").style(\"font-size\", d => d.size + \"px\").style(\"font-family\", \"Impact\").style(\"fill\", containerId === '#word-cloud-1' ? 'DodgerBlue' : 'Red').attr(\"text-anchor\", \"middle\").attr(\"transform\", d => `translate(${[d.x, d.y]})`).text(d => d.text).style(\"border\", \"1px solid black\");\n    }\n  }\n};","map":{"version":3,"names":["axios","d3","cloud","name","props","items","type","Object","default","data","required","mounted","createWordCloud","Pros","map","item","text","PositiveKeyWord","size","PositiveRating","Cons","NegativeKeyWord","NegativeRating","methods","containerId","words","width","window","innerWidth","height","layout","padding","rotate","font","fontSize","d","on","draw","start","svg","select","append","attr","selectAll","enter","style","x","y"],"sources":["/Users/jinsanghyeok/Desktop/swe-2023/Project/frontend/src/components/WordCloud.vue"],"sourcesContent":["<template>\n    <div class=\"word-cloud-container\">\n        <div id=\"word-cloud-1\">\n            <div class=\"fs-1 fw-bold\">장점</div>\n        </div>\n        <div id=\"word-cloud-2\">\n            <div class=\"fs-1 fw-bold\">단점</div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as d3 from 'd3';\nimport cloud from 'd3-cloud';\n\nexport default {\n    name: 'WordCloud',\n    props: {\n        items: {\n            type: Object,\n            default: () => {\n                return {\n                    \n                };\n            },\n        }\n    },\n    data() {\n        return {\n            items: {\n                type: Object,\n                required: true\n            }\n        };\n    },\n    mounted() {\n        if (this.items) {\n            this.createWordCloud('#word-cloud-1', this.items.Pros.map(item => ({ text: item.PositiveKeyWord, size: item.PositiveRating * 2 })));\n            this.createWordCloud('#word-cloud-2', this.items.Cons.map(item => ({ text: item.NegativeKeyWord, size: item.NegativeRating * 2 })));\n        }\n    },\n    methods: {\n        createWordCloud(containerId, words) {\n            const width = window.innerWidth;\n            const height = 400;\n            const layout = cloud()\n                .size([width, height])\n                .words(words)\n                .padding(10)\n                .rotate(() => 0)\n                .font(\"Impact\")\n                .fontSize(d => d.size * 10)\n                .on(\"end\", words => this.draw(containerId, words));\n            layout.start();\n        },\n        draw(containerId, words) {\n            const width = window.innerWidth;\n            const height = 400;\n            const svg = d3.select(containerId).append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .append(\"g\")\n                .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n            svg.selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .style(\"font-size\", d => d.size + \"px\")\n                .style(\"font-family\", \"Impact\")\n                .style(\"fill\", containerId === '#word-cloud-1' ? 'DodgerBlue' : 'Red')\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"transform\", d => `translate(${[d.x, d.y]})`)\n                .text(d => d.text)\n                .style(\"border\", \"1px solid black\");\n        }\n    }\n};\n</script>\n\n<style scoped>\n.word-cloud-1,\n.word-cloud-2 {\n    width: 100%;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}