{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-21bd57cb\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"word-cloud-container\\\" data-v-21bd57cb><div id=\\\"word-cloud-1\\\" data-v-21bd57cb><div class=\\\"fs-1 fw-bold\\\" data-v-21bd57cb>장점</div></div><div id=\\\"word-cloud-2\\\" data-v-21bd57cb><div class=\\\"fs-1 fw-bold\\\" data-v-21bd57cb>단점</div></div></div>\", 1);\nconst _hoisted_2 = {\n  key: 0,\n  class: \"modal-container\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _ctx.isModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_hoisted_1","_ctx","isModal","_createElementBlock","_hoisted_2"],"sources":["/Users/jinsanghyeok/Desktop/swe-2023/Project/frontend/src/components/WordCloud.vue"],"sourcesContent":["<template>\n    <div class=\"word-cloud-container\">\n        <div id=\"word-cloud-1\">\n            <div class=\"fs-1 fw-bold\">장점</div>\n        </div>\n        <div id=\"word-cloud-2\">\n            <div class=\"fs-1 fw-bold\">단점</div>\n        </div>\n    </div>\n    <div class=\"modal-container\" v-if=\"isModal\">\n\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport cloud from 'd3-cloud';\n\nexport default {\n    props: {\n        items: {\n            type: Object,\n            require: true,\n        }\n    },\n    data() {\n        return {\n            isModal: false,\n        };\n    },\n    watch: {\n        items: {\n            handler() {\n                this.createWordClouds();\n            },\n            deep: true\n        }\n    },\n    methods: {\n        createWordClouds() {\n            this.createWordCloud('#word-cloud-1', this.items.map(item => ({ text: item.PositiveKeyword, size: item.PositiveRating * 2 })));\n            this.createWordCloud('#word-cloud-2', this.items.map(item => ({ text: item.NegativeKeyword, size: item.NegativeRating * 2 })));\n        },\n        createWordCloud(containerId, words) {\n            const width = window.innerWidth;\n            const height = 400;\n            const layout = cloud()\n                .size([width, height])\n                .words(words)\n                .padding(10)\n                .rotate(() => 0)\n                .font(\"Impact\")\n                .fontSize(d => d.size * 10)\n                .on(\"end\", words => this.draw(containerId, words));\n            layout.start();\n        },\n        draw(containerId, words) {\n            const width = window.innerWidth;\n            const height = 400;\n            const svg = d3.select(containerId).append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .append(\"g\")\n                .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n            svg.selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .style(\"font-size\", d => d.size + \"px\")\n                .style(\"font-family\", \"Impact\")\n                .style(\"fill\", containerId === '#word-cloud-1' ? 'DodgerBlue' : 'Red')\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"transform\", d => `translate(${[d.x, d.y]})`)\n                .text(function (d) { return d.text; })\n                .style(\"border\", \"1px solid black\")\n                .on(\"click\", (event, d) => {\n                    if (containerId === '#word-cloud-2') {\n                        this.fetchReviews(d.text);\n                        this.isModalVisible = true;\n                    } else {\n                        // 장점 클릭 시 다른 처리\n                        this.$router.push({\n                            name: 'similarItems',\n                            query: { keyWord: d.text }\n                        });\n                    }\n                })\n        },\n        fetchReviews(text) {\n            const getProductRating = `http://192.168.0.213:3000/api/item/getConsKeyWordReviews/${this.itemId}`;\n            axios.get(getProductRating, params: {\n                \"itemId\": this.$store.state.itemId,\n                \"keyWord\": this.keyWord\n            })\n                .then((response) => {\n                    this.rating = response.data.rating;\n                })\n                .catch((error) => {\n                    console.error('API 요청 중 오류 발생:', error);\n                });\n        },\n    }\n};\n</script>\n\n<style scoped>\n.word-cloud-1,\n.word-cloud-2 {\n    width: 100%;\n}\n</style>\n"],"mappings":";;;;;EASSA,KAAK,EAAC;;;6DARXC,UAOM,EAC6BC,IAAA,CAAAC,OAAO,I,cAA1CC,mBAAA,CAEM,OAFNC,UAEM,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}